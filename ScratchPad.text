
Expected Outcomes :

 The ability to parse text to a set of rules as well as,
 create a set of production rules enabling for,
 the generation of a collection of Syntax Trees,
 for each statement or codeblock.

 This may be applied to a Language such as English to generate Syntax Trees based on Customized grammars. 
 This will further Extend the SpydazWeb AI SDK; 
 It is also noted that the ability to generate some form of Generic Code will also be potentially achieved. 
 It is my understanding that there is a simular functionality in microsoft roslyn and Experssions etc. 

 The Journey of Creation Reveals a lot about the microsoft compilr as well as the original basic/Interperter and compiler.
  

  The Language Creator : A Toy Programming Language

  Development Statges: 

 Create a Lexer to tokenize the input based upon a grammar with defined rules
 Create a Parser to parse Tokens into Expressions (Constant/Unary/Binary/Trinary)
	
	Generate - Statements from Expressions 
	Generate - List of Expressions and functions for inputted program
 
 Create MasterList - AST Expressions for Functions and Types  > With Internal Execution as well as Regeneration of Visual basic syntax for Expressions 
 
 Create A Compiler to ExecuteCode or Compile as Console Application or Generate ConvertedCode to Script.


 